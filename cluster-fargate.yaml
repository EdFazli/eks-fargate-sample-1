# An example of ClusterConfig with a normal nodegroup and a Fargate profile.
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eks-fargate-with-alb-ingress-cluster
  region: ap-southeast-1
  version: "1.22"

iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: aws-load-balancer-controller
      namespace: kube-system
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: kube-system
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true

nodeGroups:
  - name: ng-1
    instanceType: t4g.small
    desiredCapacity: 2
    volumeSize: 80
    volumeType: gp3
    volumeEncrypted: true # using default KMS key
    ami: ami-011e9356446270c5b
    amiFamily: Bottlerocket 
    privateNetworking: true
    subnets:
      - subnet-0695708dd097cb388 # private az1a
      - subnet-0791caf0bcec0132e # private az1b
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      withAddonPolicies:
        efs: true
    bottlerocket:
      enableAdminContainer: true
      settings:
        motd: "Congratulations! You received a hello from bottlerocket and eksctl"
    labels:
      nodegroup-type: frontend
    

vpc:
  id: vpc-0d912ff9f6b199e60
  subnets:
    public:
      ap-southeast-1a: { id: subnet-0a592971001f58c6d }
      ap-southeast-1b: { id: subnet-077861398f5c267da }
    private:
      ap-southeast-1a: { id: subnet-0695708dd097cb388 }
      ap-southeast-1b: { id: subnet-0791caf0bcec0132e }
  clusterEndpoints:
    publicAccess: true
    privateAccess: true
  nat:
    gateway: single

secretsEncryption:
  # ARN of the KMS key
  keyARN: "arn:aws:kms:ap-southeast-1:056913162044:key/2b838bcc-cdd6-4cf0-b8b4-7ff3d27a573f"

fargateProfiles:
  - name: fp-default
    selectors:
      # All workloads in the "default" Kubernetes namespace will be
      # scheduled onto Fargate:
      - namespace: default
      # All workloads in the "kube-system" Kubernetes namespace will be
      # scheduled onto Fargate:
      - namespace: kube-system
      # All workloads in the "cert-manager" Kubernetes namespace will be
      # scheduled onto Fargate:
      - namespace: cert-manager
  - name: fp-dev
    selectors:
      # All workloads in the "dev" Kubernetes namespace matching the following
      # label selectors will be scheduled onto Fargate:
      - namespace: dev
        labels:
          env: dev
          checks: passed
  - name: fp-uat
    selectors:
      # All workloads in the "uat" Kubernetes namespace matching the following
      # label selectors will be scheduled onto Fargate:
      - namespace: uat
        labels:
          env: uat
          checks: passed

cloudWatch:
  clusterLogging:
    enableTypes: ["all"] # all supported types: "api", "audit", "authenticator", "controllerManager", "scheduler"
    logRetentionInDays: 30

addons:
  - name: vpc-cni
    version: latest
    attachPolicyARNs:
      - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
  - name: coredns
    version: latest
  - name: kube-proxy
    version: latest